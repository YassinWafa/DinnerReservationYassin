{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","header","useState","firstName","setFirstName","lastName","setLastName","phone","setPhone","email","setEmail","personCount","setPersonCount","time","setTime","comment","setComment","document","body","style","className","onSubmit","e","preventDefault","timeArr","split","dateArr","formattedDate","alert","Row","Col","type","value","onChange","target","xs","min","max","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cab6233d.chunk.js","sourcesContent":["// import logo from './logo.svg';\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { Col, Row, Button } from \"react-bootstrap\";\n\nfunction App() {\n  const header = (\n    <header>\n      <div>\n        <h1>Dinner reservation</h1>\n      </div>\n    </header>\n  );\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [personCount, setPersonCount] = useState(1);\n  const [time, setTime] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n\n  function formSubmit(e) {\n    e.preventDefault();\n    let timeArr = time.split(\"T\");\n    let dateArr = timeArr[0].split(\"-\");\n    let formattedDate = dateArr[2] + \".\" + dateArr[1] + \".\" + dateArr[0];\n\n    // alert(\n    //   'First Name: ' + firstName + '\\n' +\n    //   'Last Name: ' + lastName + '\\n' +\n    //   'Phone Number: ' + phone + '\\n' +\n    //   'Email: ' + email + '\\n' +\n    //   'No. of attendees: ' + personCount + '\\n' +\n    //   'Date and time of reservation: ' + formattedDate + ' at ' + timeArr[1] + '\\n' +\n    //   'Comment: ' + comment\n    // );\n\n    alert(\n      \" Dear \" +\n        firstName +\n        \" \" +\n        lastName +\n        \" thank you for making a dinner reservation. A table for \" +\n        personCount +\n        \" will be reserved on the \" +\n        formattedDate +\n        \" at \" +\n        timeArr[1] +\n        \". If there are any changes on your reservation, we will contact you wither at \" +\n        email +\n        \" or on \" +\n        phone +\n        '. We will try to pay as much attention to your comment as possible: \"' +\n        comment +\n        '\"'\n    );\n  }\n\n  document.body.style =\n    'background-image: url(\"https://media.blogto.com/articles/20170920-bluebloodsteakhouse-05.jpg?w=2048&cmd=resize_then_crop&height=1365&quality=70\"); ' +\n    \"background-repeat: no-repeat; \" +\n    \"background-position: absolute; \" +\n    \"background-size:cover\";\n\n  return (\n    <div className=\"container\">\n      {header}\n      <hr />\n      <form onSubmit={formSubmit}>\n        <Row>\n          <Col>\n            <div className=\"form-group\">\n              <label>First Name:</label>\n              <br />\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n              ></input>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Last Name:</label>\n              <br />\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n              ></input>\n            </div>\n          </Col>\n\n          <Col>\n            <div className=\"form-group\">\n              <label>Phone:</label>\n              <br />\n              <input\n                className=\"form-control\"\n                type=\"tel\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n              ></input>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Email:</label>\n              <br />\n              <input\n                className=\"form-control\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></input>\n            </div>\n          </Col>\n        </Row>\n        <hr />\n        <Row>\n          <Col xs={6}>\n            <div className=\"form-group\">\n              <label>Time:</label>\n              <br />\n              <input\n                className=\"form-control\"\n                type=\"datetime-local\"\n                value={time}\n                onChange={(e) => setTime(e.target.value)}\n              ></input>\n            </div>\n          </Col>\n\n          <Col xs={6}>\n            <div className=\"form-group\">\n              <label>Attendee Count:</label>\n              <br />\n              <input\n                className=\"form-control\"\n                type=\"number\"\n                min=\"1\"\n                max=\"12\"\n                value={personCount}\n                onChange={(e) => setPersonCount(e.target.value)}\n              ></input>\n            </div>\n          </Col>\n        </Row>\n        <hr />\n        <Row>\n          <Col>\n            <div className=\"form-group\">\n              <label>Comment:</label>\n              <br />\n              <textarea\n                className=\"form-control\"\n                type=\"text\"\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n              ></textarea>\n            </div>\n          </Col>\n        </Row>\n        <hr />\n        <Button className=\"btn-secondary alert-success\" type=\"submit\">\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}